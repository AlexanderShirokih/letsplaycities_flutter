def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '3000'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '3.0.0-dev'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "ru.aleshi.letsplaycities"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        default_test {
            def testPass = file(project.properties["store_pass"] as String).text
            storeFile file(project.properties["store_file"] as String)
            storePassword = testPass
            keyPassword = testPass
            keyAlias project.properties['lps_alias'] as String
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.default_test
        }
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-messaging:21.0.1'
}

flutter {
    source '../..'
}

apply plugin: 'com.google.gms.google-services'
